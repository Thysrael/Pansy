@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@STR0 = dso_local constant [3 x i8] c", \00"
@STR1 = dso_local constant [2 x i8] c"\0a\00"

declare dso_local void @putstr(i8* %a0)
declare dso_local void @putint(i32 %a0)
declare dso_local i32 @getint()
define dso_local i32 @fib(i32 %a0) {
b0:
	%v6 = icmp eq i32 %a0, 1
	br i1 %v6, label %b4, label %b3
b2:
	ret i32 1
b3:
	%v11 = icmp eq i32 %a0, 2
	br i1 %v11, label %b9, label %b8
b4:
	br label %b2
b7:
	ret i32 2
b8:
	%v16 = sub i32 %a0, 2
	%v17 = call i32 @fib(i32 %v16)
	%v13 = sub i32 %a0, 1
	%v14 = call i32 @fib(i32 %v13)
	%v18 = add i32 %v14, %v17
	ret i32 %v18
b9:
	br label %b7
}
define dso_local i32 @main() {
b19:
	%v22 = call i32 @getint()
	%v23 = call i32 @getint()
	%v31 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v32 = load i32, i32* %v31
	%v136 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v135 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%v129 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v128 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%v122 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v121 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%v115 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v114 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%v108 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v107 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%v101 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v100 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%v94 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v93 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%v87 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v86 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%v80 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v79 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%v73 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v72 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%v28 = call i32 @fib(i32 4)
	%v26 = mul i32 %v22, %v23
	%v27 = sub i32 0, %v26
	%v29 = mul i32 %v27, %v28
	%v34 = add i32 %v29, %v32
	%v37 = mul i32 %v34, 5
	br label %b66
b66:
	%p0 = phi i32 [ %v37, %b19 ],  [ %v143, %b67 ]
	%v71 = icmp sle i32 %p0, 100
	br i1 %v71, label %b69, label %b68
b67:
	%v74 = load i32, i32* %v73
	%v78 = add i32 %v74, 36
	store i32 %v78, i32* %v72
	%v81 = load i32, i32* %v80
	%v85 = add i32 %v81, 36
	store i32 %v85, i32* %v79
	%v88 = load i32, i32* %v87
	%v92 = add i32 %v88, 36
	store i32 %v92, i32* %v86
	%v95 = load i32, i32* %v94
	%v99 = add i32 %v95, 36
	store i32 %v99, i32* %v93
	%v102 = load i32, i32* %v101
	%v106 = add i32 %v102, 36
	store i32 %v106, i32* %v100
	%v109 = load i32, i32* %v108
	%v113 = add i32 %v109, 36
	store i32 %v113, i32* %v107
	%v116 = load i32, i32* %v115
	%v120 = add i32 %v116, 36
	store i32 %v120, i32* %v114
	%v123 = load i32, i32* %v122
	%v127 = add i32 %v123, 36
	store i32 %v127, i32* %v121
	%v130 = load i32, i32* %v129
	%v134 = add i32 %v130, 36
	store i32 %v134, i32* %v128
	%v137 = load i32, i32* %v136
	%v141 = add i32 %v137, 36
	store i32 %v141, i32* %v135
	%v143 = add i32 %p0, 1
	br label %b66
b68:
	%v153 = getelementptr inbounds [3 x i8], [3 x i8]* @STR0, i32 0, i32 0
	br label %b144
b69:
	br label %b67
b144:
	%p1 = phi i32 [ 0, %b68 ],  [ %v155, %b145 ]
	%v149 = icmp slt i32 %p1, 10
	br i1 %v149, label %b147, label %b146
b145:
	%v151 = getelementptr inbounds [10 x i32], [10 x i32]* @a, i32 0, i32 %p1
	%v152 = load i32, i32* %v151
	call void @putint(i32 %v152)
	call void @putstr(i8* %v153)
	%v155 = add i32 %p1, 1
	br label %b144
b146:
	%v159 = getelementptr inbounds [2 x i8], [2 x i8]* @STR1, i32 0, i32 0
	call void @putstr(i8* %v159)
	call void @putint(i32 %p1)
	call void @putstr(i8* %v153)
	%v43 = call i32 @fib(i32 5)
	%v44 = add i32 %v43, 2
	%v45 = call i32 @fib(i32 %v44)
	%v164 = sub i32 -8894, %v45
	call void @putint(i32 %v164)
	call void @putstr(i8* %v153)
	call void @putint(i32 -6)
	call void @putstr(i8* %v159)
	ret i32 0
b147:
	br label %b145
}
